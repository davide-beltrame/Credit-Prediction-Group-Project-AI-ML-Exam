1) Credit Prediction

The greatest financial company in the world has collected
bank details and credit-related information from all over the globe.
Your task is to design a data-driven solution to reduce the
manual burden ad divide the user into three credit score brackets:
Poor, Standard and Good.
Your solution will help the company to develop targeted products
for each group.

Dataset:
Variables descriptions:
● Id: unique value assigned to each user
● age, occupation
● annual income, monthly salary, number of bank accounts, number of credit cards,
number of loans
● Type of loan: types of loan taken by a person ( a person may have multiple loans of
different types
● Delay_from_due_date: average number of days delayed from the payment date
● Num_of_Delayed_Payment: average number of payments delayed by a person
● Changed_Credit_Limit: percentage change in credit card limit
● Num_Credit_Inquiries: number of credit card inquiries
● Credit_Mix: classification of the mix of credits
● Outstanding_Debt: remaining debt to be paid (in USD)
● Credit_Utilization_Ratio: utilization ratio of credit card
● Credit_History_Age: age of credit history of the person
● Payment_of_Min_Amount: Represents whether only the minimum amount was paid by
the person
● Amount_invested_monthly: monthly amount invested by the customer (in USD)
● Payment_Behaviour: payment behaviour of the customer
● Monthly_Balance: monthly balance amount of the customer (in USD)

Specific Task
● Perform an Explanatory data analysis (EDA) with visualization.
● Generate a training and test set. The test set should be used only at the end.
● Preprocess the dataset (remove outliers, impute missing values, encode categorical
features with one hot encoding, not necessarily in this order)
● Test at least 3 different classifiers. First, create a validation set from the training set to
analyze the behaviour with the default hyperparameters. Then use 10-fold
cross-validation to find the best set of hyperparameters. You must describe every
hyperparameter tuned (the more, the better).
● Select the best architecture using the right metric (is the dataset balanced?)
● Finally, compute the performances of the test set.

